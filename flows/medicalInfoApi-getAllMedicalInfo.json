{
	"schemaVersion": "4",
	"info": {
		"name": "medicalInfoApi - get /MedicalInfo"
	},
	"parameter": {
		"properties": {
			"params": {
				"type": "object",
				"description": "The parameters from the endpoint."
			},
			"request": {
				"type": "object",
				"description": "The HTTP request."
			},
			"config": {
				"type": "object",
				"description": "The service's configuration"
			},
			"env": {
				"type": "object",
				"description": "The host OS environment"
			}
		},
		"additionalProperties": false,
		"required": [
			"params",
			"request",
			"config",
			"env"
		]
	},
	"start": "condition.1",
	"nodes": {
		"condition.1": {
			"type": "nodehandler://axway-flow/condition",
			"name": "Chk Id",
			"method": "exists",
			"parameters": [
				{
					"name": "source",
					"type": "jsonpath",
					"value": "$.params.patientId",
					"metaName": "source",
					"metaDescription": "The input to test."
				}
			],
			"outputs": {
				"true": {
					"routes": [
						"Patient.1"
					],
					"context": "$.exists",
					"metaName": "True"
				},
				"false": {
					"routes": [
						"http.2"
					],
					"context": "$.exists",
					"metaName": "False"
				}
			},
			"metaMethod": "Exists"
		},
		"http.1": {
			"type": "nodehandler://axway-flow/http",
			"name": "Success",
			"method": "setresponse",
			"parameters": [
				{
					"name": "status",
					"type": "number",
					"value": "200",
					"metaName": "status",
					"metaDescription": "The HTTP status code"
				},
				{
					"name": "body",
					"type": "jsonpath",
					"value": "$.result",
					"metaName": "body",
					"metaDescription": "The response payload"
				}
			],
			"outputs": {
				"next": {
					"context": "$.response",
					"routes": [],
					"metaName": "Next"
				}
			},
			"metaMethod": "Set HTTP Response"
		},
		"http.2": {
			"type": "nodehandler://axway-flow/http",
			"name": "Fail",
			"method": "setresponse",
			"parameters": [
				{
					"name": "status",
					"type": "number",
					"value": "500",
					"metaName": "status",
					"metaDescription": "The HTTP status code"
				}
			],
			"outputs": {
				"next": {
					"context": "$.response",
					"routes": [],
					"metaName": "Next"
				}
			},
			"metaMethod": "Set HTTP Response"
		},
		"Condition.1": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-swagger/Condition",
			"name": "getAllConditions",
			"method": "getAllConditions",
			"parameters": [
				{
					"name": "patient",
					"type": "jsonpath",
					"value": "$.params.patientId",
					"metaName": "patient",
					"metaDescription": "patient id"
				}
			],
			"outputs": {
				"200": {
					"routes": [
						"Procedure.1"
					],
					"context": "$.resp_condition",
					"metaName": "200"
				},
				"default": {
					"routes": [
						"http.2"
					],
					"context": "$.response",
					"metaName": "Default"
				},
				"error": {
					"routes": [
						"http.2"
					],
					"context": "$.error",
					"metaName": "Error"
				}
			},
			"metaMethod": "getAllConditions"
		},
		"Procedure.1": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-swagger/Procedure",
			"name": "getAllProcedures",
			"method": "getAllProcedures",
			"parameters": [
				{
					"name": "patient",
					"type": "jsonpath",
					"value": "$.params.patientId",
					"metaName": "patient",
					"metaDescription": "patient id"
				}
			],
			"outputs": {
				"200": {
					"routes": [
						"javascript.1"
					],
					"context": "$.resp_procedure",
					"metaName": "200"
				},
				"default": {
					"routes": [
						"http.2"
					],
					"context": "$.response",
					"metaName": "Default"
				},
				"error": {
					"routes": [
						"http.2"
					],
					"context": "$.error",
					"metaName": "Error"
				}
			},
			"metaMethod": "getAllProcedures"
		},
		"javascript.1": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-javascript/javascript",
			"name": "Combine data",
			"method": "Execute",
			"parameters": [
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$",
					"metaName": "data",
					"metaDescription": "The value to apply as the `data` argument to the javascript code.  For objects and arrays, `data` is passed by reference."
				},
				{
					"name": "code",
					"type": "string",
					"value": "\"return {\\n  patient: data.resp_patient.data,\\n  procedure:  data.resp_procedure.data.entry,\\n  condition:  data.resp_condition.data.entry\\n};\"",
					"metaName": "code",
					"metaDescription": "A javascript function body. Supports `await` and returning promises"
				}
			],
			"outputs": {
				"next": {
					"context": "$.result",
					"routes": [
						"http.1"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [
						"http.2"
					],
					"metaName": "Error"
				}
			},
			"metaMethod": "Execute"
		},
		"Patient.1": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-swagger/Patient",
			"name": "getPatientById",
			"method": "getPatientById",
			"parameters": [
				{
					"name": "id",
					"type": "jsonpath",
					"value": "$.params.patientId",
					"metaName": "id"
				}
			],
			"outputs": {
				"200": {
					"routes": [
						"Condition.1"
					],
					"context": "$.resp_patient",
					"metaName": "200"
				},
				"default": {
					"routes": [
						"http.2"
					],
					"context": "$.response",
					"metaName": "Default"
				},
				"error": {
					"routes": [
						"http.2"
					],
					"context": "$.error",
					"metaName": "Error"
				}
			},
			"metaMethod": "getPatientById"
		}
	}
}